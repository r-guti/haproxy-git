---

- hosts: all
  become: true
  pre_tasks:

  - name: update repository index for Ubuntu
    tags: always
    apt:
      update_cache: yes
      changed_when: false
    when: ansible_distribution_version == "Ubuntu"

  - name: install UFW and HAProxy
    package:
      name:
        - ufw
        - haproxy
      state: latest
    when: ansible_distribution == "Ubuntu"

  - name: start and enable UFW
    tags: ufw-on
    service:
      name: ufw
      state: started
      enabled: yes

  - name: Enable UFW
    community.general.ufw:
      state: enabled

  - name: Allow SSH for internal network 192.168.50.0/24
    community.general.ufw:
      rule: allow
      port: 22
      proto: tcp
      from_ip: 192.168.50.0/24

  - name: Allow only http and https
    community.general.ufw:
      rule: allow
      port: "{{ item }}"
      proto: tcp
    loop:
      - 80
      - 443
      - 3000
      - 81
      - 9000

  - name: Start HAProxy
    service:
      name: haproxy
      state: started

- hosts: all
  become: true
  vars:
    - server_hostname: lab
    - key_size: 4096
    - passphrase: 123
    - key_type: RSA # Others include DSA, ECC, Ed25519, Ed448, X25519, X448
    - country_name: US
    - email_address: [a@a.com]
    - organization_name: IT
    - common_name: www.lab.com
  tasks:
    - name: Generate an OpenSSL private key
      tags: certs
      community.crypto.openssl_privatekey:
        path: "/etc/ssl/certs/{{ server_hostname }}.pem.rsa.key"
        size: "{{ key_size }}"
        type: "{{ key_type }}"
        backup: yes

    - name: Generate an OpenSSL Certificate Signing Request with Subject *.lab.com
      tags: certs
      community.crypto.openssl_csr:
        path: "/etc/ssl/certs/{{ server_hostname }}.rsa.csr"
        privatekey_path: "/etc/ssl/certs/{{ server_hostname }}.pem.rsa.key"
        country_name: "{{ country_name }}"
        organization_name: "{{ organization_name }}"
        email_address: "{{ email_address }}"
        common_name: "{{ common_name }}"

    - name: Generate a Self Signed OpenSSL certificate
      tags: certs
      community.crypto.x509_certificate:
        path: "/etc/ssl/certs/{{ server_hostname }}.pem.rsa"
        privatekey_path: "/etc/ssl/certs/{{ server_hostname }}.pem.rsa.key"
        csr_path: "/etc/ssl/certs/{{ server_hostname }}.rsa.csr"
        provider: selfsigned

- hosts: all
  become: true
  vars:
    - server_hostname: lab
    - key_size: 256
    - country_name: US
    - email_address: a@a.com
    - organization_name: IT
    - common_name: www.lab.com
  tasks:
    - name: Generate an OpenSSL ECDSA private key
      tags: certs
      community.crypto.openssl_privatekey:
        path: "/etc/ssl/certs/{{ server_hostname }}.pem.ecdsa.key"
        size: "{{ key_size }}"
        type: "ECC"
        curve: "secp256r1"
        backup: yes

    - name: Generate an OpenSSL Certificate Signing Request with Subject *.lab.com
      tags: certs
      community.crypto.openssl_csr:
        path: "/etc/ssl/certs/{{ server_hostname }}.ecdsa.csr"
        privatekey_path: "/etc/ssl/certs/{{ server_hostname }}.pem.ecdsa.key"
        country_name: "{{ country_name }}"
        organization_name: "{{ organization_name }}"
        email_address: "{{ email_address }}"
        common_name: "{{ common_name }}"

    - name: Generate a Self Signed OpenSSL certificate
      tags: certs
      community.crypto.x509_certificate:
        path: "/etc/ssl/certs/{{ server_hostname }}.pem.ecdsa"
        privatekey_path: "/etc/ssl/certs/{{ server_hostname }}.pem.ecdsa.key"
        csr_path: "/etc/ssl/certs/{{ server_hostname }}.ecdsa.csr"
        provider: "selfsigned"

    - name: copy redirect map
      tags: haproxycfg
      copy:
        src: redirect.map
        dest: /etc/haproxy/redirect.map
        owner: root
        group: root
        mode: 0644

    - name: copy convert map
      tags: haproxycfg
      copy:
        src: convert.map
        dest: /etc/haproxy/convert.map
        owner: root
        group: root
        mode: 0644

    - name: copy haproxy file
      tags: haproxycfg
      copy:
        src: /home/rod/haproxy-project/haproxy-git/files/haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg
        owner: root
        group: root
        mode: 0644

    - name: Restart HAProxy to load the config
      tags: restart-h
      service:
        name: haproxy
        state: restarted
